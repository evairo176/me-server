// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String  @id @default(cuid())
  email     String  @unique
  username  String  @unique
  fullname  String
  password  String
  bio       String?
  profile_img String @default("https://api.dicebear.com/6.x/notionists-neutral/svg?seed=Tinkerbell")
  youtube   String?
  instagram String?
  facebook  String?
  twitter   String?
  github    String?
  website   String?
  total_posts Int   @default(0)
  total_reads Int   @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Blog      Blog[]
  roles    UserRole[]
}

model Category {
  id       String  @id @default(cuid())
  name     String  
  slug     String  
  Blog      Blog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model Blog {
  id        String  @id @default(cuid())
  authorId  String?
  categoryId  String?
  slug      String 
  title     String 
  image     String?
  des       String?
  content   String
  Tags      Tag[]
  Author      User?   @relation(fields: [authorId], references: [id])
  Categories      Category?   @relation(fields: [categoryId], references: [id])
  total_likes Int   @default(0) 
  total_comments Int   @default(0) 
  total_reads Int   @default(0) 
  total_parent_comments Int   @default(0) 
  draft Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id       String  @id @default(cuid())
  name     String  @unique
  Blogs     Blog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model Role {
  id      String  @id @default(cuid())
  name    String   @unique
  status  Boolean @default(true)
  menus   MenuRole[]
  users   UserRole[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Menu {
  id      String  @id @default(cuid())
  name    String  @unique
  url     String  
  status  Boolean
  roles   MenuRole[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MenuRole {
  id      String  @id @default(cuid())
  menu    Menu     @relation(fields: [menuId], references: [id])
  menuId  String
  role    Role     @relation(fields: [roleId], references: [id])
  roleId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserRole {
  id     String  @id @default(cuid())
  user   User    @relation(fields: [userId], references: [id])
  userId String
  role   Role    @relation(fields: [roleId], references: [id])
  roleId String
}